# 오버라이딩

- 서브클래스에서 슈퍼클래스의 private변수에 접근할 수 없다.
- super 키워드는 메서드에만 사용할 수 있다(ex) super.getSalary();)

@override 애너테이션을 달면 오버라이딩 받은 메서드에서 리턴 타입 또는 파라미터를 바꿨
을 때 컴파일러가 오류를 출력한다.

리턴타입을 바꿨을 때 : The return type is incompatible with Employee.worksFor(Employee)

파라미터를 바꿨을 때 : The method worksFor(Manager) of type Manager must override or implement a supertype method

## 서브 클래스 생성

서브클래스에서 슈퍼 클래스의 private필드에 접근할 수 없기 때문에 슈퍼클래스의 생성자로 해당 변수를 초기화 해야한다.(반드시 서브클래스 생성자의 첫 번째 줄에 작성해야한다.

ex) 

```

	public Manager(String name, int salary) {
		super(name, salary);
	}
```

그리고 해당 변수를 getter 메서드로 확인하고, setter함수로 수정해야 한다.(직접접근 불가, 슈퍼 클래스에 getter, setter 메서드가 있어야 한다.)

```
Employee boss = new Manager();
```

이 경우 타입은 Employee지만 Manager 클래스에서 오버라이딩 된 메서드를 호출한다.

boss.getSalary() 할 때 Manager의 getSalary()를 호출


